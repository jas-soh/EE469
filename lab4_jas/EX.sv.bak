// This module is the execution stage.
// Controls passed on: MemWE, Mem2Reg, and RegWE.
module EX (ALUOp_EX, Da_EX, Db_EX, ImmSize_out_EX, 
    ALUzeroFlag, negFlag, ovFlag, ALU_out_EX);

    input logic [2:0] ALUOp_EX;
    input logic [63:0] Da_EX, Db_EX;
    input logic [63:0] ImmSize_out_EX;

    output logic ALU_out_EX;
    output logic ALUzeroFlag, negFlag, ovFlag;

    // choose Db or Imm
    logic [63:0] ALUSrc_out;
    mux2_1_multi #(64) ALUSrc_mux (.s0(ALUSrc_EX), .a(Db_EX), .b(ImmSize_out_EX), .out(ALUSrc_out));

    // ALU
    logic cOutFlag;
    alu alu_operation (.A(Da_EX), .B(ALUSrc_out), .cntrl(ALUOp_EX), .result(ALU_out_EX),
        .negative(negFlag), .zero(ALUzeroFlag), .overflow(ovFlag), .carry_out_flag(cOutFlag));
endmodule

`timescale 1ps/1ps
module EX ();
    // inputs
    logic [2:0] ALUOp_EX;
    logic [63:0] Da_EX, Db_EX;
    logic [63:0] ImmSize_out_EX;

    // output 
    logic ALU_out_EX;
    logic ALUzeroFlag, negFlag, ovFlag;

    initial begin
        ALUOp_EX = 3'b000; Da_EX = '0; Db_EX = '0; ImmSize_out_EX = '1; #10;
    end

endmodule 